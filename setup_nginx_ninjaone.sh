#!/bin/bash

##############################################################################
# Script d'installation et configuration Nginx pour ninjaone.jordan-s.org
# API NinjaOne RMM - Proxy vers localhost:3001
##############################################################################

set -e  # Arr√™ter en cas d'erreur

# Couleurs pour les logs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}========================================${NC}"
echo -e "${GREEN}Configuration Nginx pour NinjaOne API${NC}"
echo -e "${GREEN}========================================${NC}"
echo ""

# V√©rifier si on est root
if [ "$EUID" -ne 0 ]; then
    echo -e "${RED}‚ùå Ce script doit √™tre ex√©cut√© en tant que root (sudo)${NC}"
    exit 1
fi

# Variables
DOMAIN="ninjaone.jordan-s.org"
NGINX_CONF_PATH="/etc/nginx/sites-available/$DOMAIN"
NGINX_ENABLED_PATH="/etc/nginx/sites-enabled/$DOMAIN"
CURRENT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CONF_FILE="$CURRENT_DIR/nginx_ninjaone.conf"

echo -e "${YELLOW}üìã Configuration:${NC}"
echo "  Domaine: $DOMAIN"
echo "  Port API: 3001"
echo "  Fichier conf: $NGINX_CONF_PATH"
echo ""

# √âtape 1: V√©rifier que nginx est install√©
echo -e "${YELLOW}üîç V√©rification de Nginx...${NC}"
if ! command -v nginx &> /dev/null; then
    echo -e "${RED}‚ùå Nginx n'est pas install√©${NC}"
    echo -e "${YELLOW}Installation de Nginx...${NC}"
    apt update
    apt install -y nginx
    echo -e "${GREEN}‚úÖ Nginx install√©${NC}"
else
    echo -e "${GREEN}‚úÖ Nginx est d√©j√† install√©${NC}"
fi

# √âtape 2: V√©rifier que le fichier de configuration existe
echo ""
echo -e "${YELLOW}üìÑ Copie du fichier de configuration...${NC}"
if [ ! -f "$CONF_FILE" ]; then
    echo -e "${RED}‚ùå Fichier nginx_ninjaone.conf introuvable${NC}"
    echo "Assurez-vous que nginx_ninjaone.conf est dans le m√™me dossier que ce script"
    exit 1
fi

# Copier la configuration
cp "$CONF_FILE" "$NGINX_CONF_PATH"
echo -e "${GREEN}‚úÖ Configuration copi√©e vers $NGINX_CONF_PATH${NC}"

# √âtape 3: Cr√©er le lien symbolique
echo ""
echo -e "${YELLOW}üîó Activation du site...${NC}"
if [ -L "$NGINX_ENABLED_PATH" ]; then
    echo "  Lien symbolique existe d√©j√†, suppression..."
    rm "$NGINX_ENABLED_PATH"
fi
ln -s "$NGINX_CONF_PATH" "$NGINX_ENABLED_PATH"
echo -e "${GREEN}‚úÖ Site activ√©${NC}"

# √âtape 4: Tester la configuration
echo ""
echo -e "${YELLOW}üß™ Test de la configuration Nginx...${NC}"
if nginx -t; then
    echo -e "${GREEN}‚úÖ Configuration Nginx valide${NC}"
else
    echo -e "${RED}‚ùå Erreur dans la configuration Nginx${NC}"
    exit 1
fi

# √âtape 5: Recharger Nginx
echo ""
echo -e "${YELLOW}üîÑ Rechargement de Nginx...${NC}"
systemctl reload nginx
echo -e "${GREEN}‚úÖ Nginx recharg√©${NC}"

# √âtape 6: V√©rifier que l'API NinjaOne tourne
echo ""
echo -e "${YELLOW}üîç V√©rification de l'API NinjaOne (port 3001)...${NC}"
if netstat -tuln | grep -q ":3001 "; then
    echo -e "${GREEN}‚úÖ API NinjaOne d√©tect√©e sur le port 3001${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Aucun service d√©tect√© sur le port 3001${NC}"
    echo "Assurez-vous de d√©marrer l'API NinjaOne avec:"
    echo "  cd /path/to/ninja-one_api && npm run start:prod"
fi

# √âtape 7: Instructions finales
echo ""
echo -e "${GREEN}========================================${NC}"
echo -e "${GREEN}‚úÖ Configuration termin√©e !${NC}"
echo -e "${GREEN}========================================${NC}"
echo ""
echo -e "${YELLOW}üìù Prochaines √©tapes:${NC}"
echo ""
echo "1. V√©rifier que l'API NinjaOne tourne:"
echo "   cd ~/DataWarehouse_EBP/ninja-one_api"
echo "   npm run start:prod"
echo ""
echo "2. Tester l'acc√®s HTTP:"
echo "   curl http://ninjaone.jordan-s.org/health"
echo "   curl http://ninjaone.jordan-s.org/api/tickets/stats"
echo ""
echo "3. (Optionnel) Configurer HTTPS avec Let's Encrypt:"
echo "   sudo certbot --nginx -d ninjaone.jordan-s.org"
echo ""
echo "4. V√©rifier les logs Nginx:"
echo "   tail -f /var/log/nginx/ninjaone_access.log"
echo "   tail -f /var/log/nginx/ninjaone_error.log"
echo ""
echo -e "${YELLOW}üîó URLs de test:${NC}"
echo "  - Health: http://ninjaone.jordan-s.org/health"
echo "  - Stats: http://ninjaone.jordan-s.org/api/tickets/stats"
echo "  - Liste: http://ninjaone.jordan-s.org/api/tickets?limit=10"
echo ""
echo -e "${GREEN}‚ú® Configuration r√©ussie !${NC}"
